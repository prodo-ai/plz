#!/bin/bash

set -e
set -u

cd "$(dirname "${BASH_SOURCE[0]}")"

if [[ -z "${CONFIGURATION:-}" ]]; then
  export CONFIGURATION="$(cat "$1")"
fi
PORT="${PORT:-$(python -c 'import os; import pyhocon; print(pyhocon.ConfigFactory.parse_string(os.environ.get("CONFIGURATION", "")).get("port", ""))')}"
PORT="${PORT:-8080}"

LOG_LEVEL="${LOG_LEVEL:-$(python -c 'import os; import pyhocon; print(pyhocon.ConfigFactory.parse_string(os.environ.get("CONFIGURATION", "")).get("log_level", ""))')}"
LOG_LEVEL="${LOG_LEVEL:-debug}"

export PYTHONPATH='./src'

if [[ "${CREATE_AWS_RESOURCES:-}" ]]; then
  python src/plz/controller/utils/create_aws_resources.py
fi

CONFIGURATION+=$'\n'
CONFIGURATION+='data_dir = ../../test_cache/'$'\n'
CONFIGURATION+='results = {'$'\n'
CONFIGURATION+='  directory = ../../test_cache/results'$'\n'
CONFIGURATION+='}'$'\n'
CONFIGURATION+='redis_host=localhost'$'\n'

echo Here
CONFIGURATION="$CONFIGURATION" PORT=$PORT coverage run --source=. src/plz/controller/main.py

# exec gunicorn \
#   --bind="0.0.0.0:${PORT}" \
#  --workers=16 \
#  --timeout=2000 \
#  --pythonpath="${PYTHONPATH}" \
#  --capture-output \
#  --log-level="${LOG_LEVEL}" \
#  plz.controller.main:app \
#  -- $@
