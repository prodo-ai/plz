port = 5123
port = ${?PORT}

redis_host = ${?REDIS_HOST}

data_dir = "../../cache/controller"

instances = {
  provider = aws-ec2
  region = ${config.aws_region}
  group_name = plz-group
  group_name = ${?config.environment_name}
  use_public_dns = true
  aws_worker_ami = plz-worker-${config.ami_tag}
  worker_security_group_names = [plz-workers]
}

images = {
  provider = aws-ecr
  region = ${config.aws_region}
  repository = plz/builds
}

results = {
  provider = local
  directory = "../../cache/results"
}

assumptions = {
  # We assume that 10 minutes is sufficient for socket
  # operations on the docker client
  docker_api_client_timeout_in_minutes = 10
  # We assume that the auth tokens from ECR last for
  # at least 5 minutes
  ecr_login_validity_in_minutes = 5
  # We assume that if an instance is locked for more
  # than one hour, something is wrong with it and should be
  # killed
  instance_lock_timeout = 3600
  # We assume that instances take at most 20 minutes to start
  # an execution. Later than that they'll be considered idle for
  # too long and disposed of accordingly
  instance_max_startup_time_in_minutes = 20
  # Docker sometimes tells us that a container has finished at
  # some point in the future. We assume that differences
  # smaller than this value, in seconds, are just due to this
  # Docker glitch
  container_idle_timestamp_grace = 60
}
